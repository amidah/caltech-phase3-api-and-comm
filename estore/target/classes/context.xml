<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- the below tag enables dependency injection via @Autowired annotation-->
	<context:annotation-config/>

	<bean id="con1" class="com.spring.estore.bean.Connection" init-method="myInit" destroy-method="myDestroy">  
		<property name="url" value="jdbc:mysql://localhost/estore"></property>
		<property name="username" value="root"></property>
		<property name="password" value="Root@1234"></property>
	</bean>

	<bean id="con2" class="com.spring.estore.bean.Connection" init-method="myInit" destroy-method="myDestroy">  
		<property name="url" value="jdbc:mysql://localhost/fooddelivery"></property>
		<property name="username" value="root"></property>
		<property name="password" value="Root@1234"></property>
	</bean>
	
	<bean id="addr" class="com.spring.estore.bean.Address">
		<property name="adrsLine" value="2121 Street A"></property>
		<property name="city" value="ABC"></property>
		<property name="state" value="XYZ State"></property>
		<property name="zipCode" value="110011"></property>
	</bean>
	
	<bean id="restr" class="com.spring.estore.bean.Restaurant">
		<property name="name" value="Johns Cafe"></property>
		<property name="phone" value="+91-9999999999"></property>
		<property name="operatingHours" value="10:00 to 22:00"></property>
		<property name="ratings" value="4.5"></property>
		
		<!-- IOC Container will use Setter method in Resturant class for setting address in it-->
		<!-- SETTER INJECTION -->
		<!-- <property name="address" ref="addr"></property> -->
		
		<!-- CONSTRUCTOR INJECTION -->
		<constructor-arg ref="addr"></constructor-arg>
		<property name="searchKeywords">
			<list>
				<value>Johns Cafe</value>
				<value>Coffee Shop</value>
				<value>Cake</value>
				<value>Pastry</value>
				<value>Pizza Shop</value>
			</list>
		</property>
	</bean>
	
	<bean id="foodItem" class="com.spring.estore.bean.FoodItem">
		<property name="name" value="Veggie Pizza"></property>
		<property name="price" value="300"></property>
	</bean>
	
	<bean id="pizza" class="com.spring.estore.bean.Pizza" parent="foodItem">
		<property name="name" value="Veggie Supreme Pizza"></property>
		<property name="price" value="600"></property>
		<property name="size" value="10"></property>
		<property name="toppings" value="cheese, bell peppers, corns, and brocoli"></property>
	</bean>
	
	<bean id="user" class="com.spring.estore.bean.User">
		<property name="name" value="John Watson"></property>
		<property name="email" value="john@example.com"></property>
		<!-- <property name="order" ref="order"></property> -->
		<!-- <constructor-arg ref="order"></constructor-arg> -->
	</bean>
	
	<bean id="order1" class="com.spring.estore.bean.Order" name="order1">
		<property name="orderId" value="101"></property>
		<property name="dateTimeStamp" value="20th May, 2023 20:00"></property>
		<property name="amount" value="2000"></property>
	</bean>
	
	<bean id="order2" class="com.spring.estore.bean.Order" name="order">
		<property name="orderId" value="102"></property>
		<property name="dateTimeStamp" value="25th May, 2023 20:00"></property>
		<property name="amount" value="5000"></property>
	</bean>
	
	
</beans>



